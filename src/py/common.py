# Use this file to store common constants and classes to be used throughout this repo.

from enum import Enum, IntEnum
import numpy as np

# Constants as specified in the paper
N_HOURS = 48
N_COLS = N_HOURS
N_ROWS = 150

# Normalization output range. Selected as [0,255] for openCV compatibility
NORM_OUT_MIN = 0
NORM_OUT_MAX = 255

# Use to select Normalization Method for a given run
class Norm_method(Enum):
    MINMAX = 1
    CUSTOM = 2

# Mapping from itemid to unique feature id.
# itemids come from MIMIC-III. Feature ids are used to amalgamate
# itemids with same practical meaning. Feature id is used directly as row index in output image.
item2feature = {
    50983: 14,
    50971: 15,
    50882: 16,
    50868: 17,
    50809: 18,
    50893: 19,
    51006: 20,
    50970: 23,
    50976: 24,
    50862: 25,
    50885: 26,
    50878: 27,
    50863: 28,
    51301: 29,
    51222: 30,
    51265: 31,
    50813: 32,
    51002: 33,
    51003: 33,
    50820: 34,
    51484: 35,
    50902: 36,
    51237: 37,
    50956: 38,
    51250: 39,
    50818: 40,
    50821: 41,
    51275: 42,
    51277: 43,

}

# Used for indexing columns by name in stats
class Stats_col(IntEnum):
    MIN = 0
    MAX = 1
    SOFTMIN = 2
    SOFTMAX = 3
    NORMLOW = 4
    NORMHI = 5
    MEAN = 6
    STDDEV = 7
    MEDIAN = 8

# Autogenerated from clinical_variables.ods
stats = np.array([
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [35,189,35,189,138.5551,138.5551,138.5551,4.9481,139],
    [0.8,27.5,0.8,27.5,4.1544,4.1544,4.1544,0.6562,4.1],
    [2,90,2,90,25.4115,25.4115,25.4115,4.8942,25],
    [-21,118,-21,118,13.882,13.882,13.882,3.7675,13],
    [-251,3070,-251,3070,139.2986,139.2986,139.2986,58.1087,129],
    [0,47.7,0,47.7,8.5089,8.5089,8.5089,0.842,8.5],
    [0,290,0,290,29.2564,29.2564,29.2564,22.9176,22],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,58,0,58,3.5985,3.5985,3.5985,1.32052,3.4],
    [0.2,56,0.2,56,6.5656,6.5656,6.5656,1.2108,6.7],
    [0.9,6.9,0.9,6.9,3.178,3.178,3.178,0.757,3.15],
    [0,82.8,0,82.8,3.3405,3.3405,3.3405,6.1149,0.9],
    [0,36400,0,36400,151.149,151.149,151.149,732.108,36],
    [0,4695,0,4695,168.286,168.286,168.286,197.4186,107],
    [0,846.7,0,846.7,10.5041,10.5041,10.5041,9.006,9.1],
    [0,25.5,0,25.5,10.56,10.56,10.56,1.95733,10.3],
    [4,4504,4,4504,239.31904,239.31904,239.31904,150.3102,215],
    [0,36,0,36,2.6028,2.6028,2.6028,2.5472,1.8],
    [0,575,0,575,1.1443,1.1443,1.1443,4.3426,0.13],
    [0,7.99,0,7.99,7.3793,7.3793,7.3793,0.08711,7.39],
    [4,150,4,150,45.3794,45.3794,45.3794,47.816,15],
    [22,155,22,155,103.4792,103.4792,103.4792,6.11369,103],
    [0,112.3,0,112.3,1.6621,1.6621,1.6621,1.3351,1.3],
    [0,1210000,0,1210000,143.02789,143.02789,143.02789,4843.0091,37],
    [0,147,0,147,90.2649,90.2649,90.2649,6.9878,90],
    [0,247,0,247,42.7367,42.7367,42.7367,11.3889,41],
    [0,1914,0,1914,136.7356,136.7356,136.7356,92.1099,109],
    [0,193.3,0,193.3,44.1984,44.1984,44.1984,25.7033,34.1],
    [0,36.4,0,36.4,15.7992,15.7992,15.7992,2.3561,15.3],
])